---
- block:
    - name: check (or create) app-data directory
      file:
        path: "{{ app_data_dir }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      become: true

    - name: add DOCKER_APP_DATA env to .profile
      lineinfile:
        path: ~/.profile
        line: "export DOCKER_APP_DATA='{{ app_data_dir }}'"
        state: present
      ignore_errors: true

    - name: add DOCKER_APP_DATA env to .bash_profile
      lineinfile:
        path: ~/.bash_profile
        line: "export DOCKER_APP_DATA='{{ app_data_dir }}'"
        state: present
      ignore_errors: true

    - name: jump straight into container dir via bashrc
      lineinfile:
        path: ~/.bashrc
        line: "cd {{ container_dest }}/{{ app_section }}"
        state: present

    - name: copy bash_aliases
      copy:
        src: bash_aliases
        dest: ~/.bash_aliases
        mode: 0644
        force: true
  when: setup_for_docker

- name: stop and remove services
  command:
    cmd: docker-compose down
    chdir: "{{ container_dest }}/{{ app_section }}"

- name: copy over compose files
  copy:
    src: compose-files/{{ app_section }}/
    dest: "{{ container_dest }}/{{ app_section }}"
    force: true

- name: pull service images
  command:
    cmd: docker-compose pull
    chdir: "{{ container_dest }}/{{ app_section }}"
  register: result
  changed_when: '"Downloading" in result.stdout'

- name: start services
  command:
    cmd: docker-compose up -d --remove-orphans
    chdir: "{{ container_dest }}/{{ app_section }}"

- name: remove unused images
  shell: y | docker image prune
  register: result
  changed_when: '"deleted" in result.stdout'
